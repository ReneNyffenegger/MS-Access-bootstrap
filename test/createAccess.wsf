<!--

   Create access application from commandline with VBScript:

       cscript createAccess.wsf

-->
<job id="IsThisIdRequired">

 <script language="VBScript" src="../accessBootstrap.vbs" />

   <script language="VBScript">

      option explicit

      dim wshShell
      set wshShell = createObject("WScript.Shell")

      dim projectRootDir
          projectRootDir = wshShell.CurrentDirectory & "\" ' "p:\ath\to\project\root\"

      wscript.echo("projectRootDir = " & projectRootDir)

      dim app
    ' call createDB(projectRootDir & "created.accdb")
      set app = createDB(projectRootDir & "created.accdb")
  
      '
      ' Add (TypeLib) References
      '          '          '
'q      call addReference(app, "{420B2830-E718-11CF-893D-00A0C9054228}", 1, 0) ' Microsoft Scripting Runtime
  
      '
      ' Insert a module. The 3rd parameter (1) indicates a »normal« module (vbext_ct_StdModule)
      ' rather than a class module (vbext_ct_ClassModule)
      '
        call insertModule(app, projectRootDir & "init.bas", "init", 1)
  
      '
      ' A possible sensible choice of modules to be added to the Access project might be:
      '
      '   call insertModule(projectRootDir & "VBAModules\Common\file\File.bas"            , "File"                 , 1)
      '   call insertModule(projectRootDir & "VBAModules\Database\SQL.bas"                , "SQL"                  , 1)
      '   call insertModule(projectRootDir & "VBAModules\Access\CommonFunctionalityDB.bas", "CommonFunctionalityDB", 1)
      '
      ' These modules are found at
      ' development/languages/VBA/modules/
      ' https://github.com/ReneNyffenegger/VBAModules
      '
      ' If these modules are used, two additional references need to be added as well:
      '
      '   call addReference(app, "{B691E011-1797-432E-907A-4D8C69339129}", 6, 1) ' ADODB, needed for slurpFileCharSet in File.bas
      '   call addReference(app, "{3F4DACA7-160D-11D2-A8E9-00104B365C9F}", 5, 5) ' Regexp, needed for removeSQLComments in SQL.bas
      '
  
  
      '
      ' Call a function/sub that is defined in the inserted init.bas:
      '
      ' If calling a function, the following run cannot use paranthesis
      '   (Error message: Microsoft VBScript compilation error: Cannot use parentheses when calling a Sub )
      '
        app.run "createApplication", projectRootDir
'       app.save
  
        wscript.echo("The end")

   </script>

</job>
